services:
  identity-service:
    build:
      context: ./identity
      dockerfile: Dockerfile
    container_name: identity-service
    ports:
      - "9090:9090"
    networks:
      - grpc-network
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./private.key:/private.key:ro
      - ./public.key:/public.key:ro
    env_file:
      - ./.env
    environment:
      - PORT=:9090
      - SERVICE_NAME=identity
      - RESOURCE_URL=resource-service:9090
      - IDENTITY_DATABASE_URL=postgres://postgres:postgres@db:5432/ms_identity
    command: sh -c "./entrypoint"
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=:9090"]
      interval: 30s
      timeout: 10s
      retries: 3

  resource-service:
    build:
      context: ./resource
      dockerfile: Dockerfile
    container_name: resource-service
    ports:
      - "9091:9090"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - grpc-network
    volumes:
      - ./public.key:/public.key:ro
    env_file:
      - ./.env
    environment:
      - PORT=:9090
      - SERVICE_NAME=resource
      - RESOURCE_DATABASE_URL=postgres://postgres:postgres@db:5432/ms_resource
    command: sh -c "./entrypoint"
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=:9090"]
      interval: 30s
      timeout: 10s
      retries: 3

  envoy:
    image: envoyproxy/envoy:v1.33-latest
    container_name: envoy-proxy
    ports:
      - "8080:8080"
      - "9901:9901"
    networks:
      - grpc-network
    volumes:
      - ./descriptor:/etc/envoy/descriptors:ro
      - ./envoy.yaml:/etc/envoy/envoy.yaml:ro
      - ./identity/jwks.json:/etc/envoy/keys/jwks.json:ro
    depends_on:
      identity-service:
        condition: service_healthy
      resource-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9901/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15
    container_name: identity-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    networks:
      - grpc-network
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./init_scripts:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  grpc-network:
    driver: bridge